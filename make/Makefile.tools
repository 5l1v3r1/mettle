ELLCC_HOST=linux
ifneq "$(TARGET)" "native"
    CC=$(ROOT)/build/tools/$(ELLCC_HOST)/ellcc/bin/ecc
    CPP=$(ROOT)/build/tools/$(ELLCC_HOST)/ellcc/bin/ecc
    AR=$(ROOT)/build/tools/$(ELLCC_HOST)/ellcc/bin/ecc-ar
    LD=$(ROOT)/build/tools/$(ELLCC_HOST)/ellcc/bin/ecc-ld
    RANLIB=$(ROOT)/build/tools/$(ELLCC_HOST)/ellcc/bin/ecc-ranlib
else
    CC=cc
    AR=ar
    RANLIB=ranlib
endif

TAR=tar
ELF2BIN=elf2bin$(BITS)

build/tools/$(ELF2BIN): util/$(ELF2BIN).c
	cc -o $@ $< -static

INSTALL=install
export PATH:=$(ROOT)/build/tools/$(ELLCC_HOST)/ellcc/bin:$(PATH)
ifeq "$(shell uname -s)" "Darwin"
    ELLCC_HOST=osx
    ifeq ("$(wildcard /usr/local/opt/coreutils/libexec/gnubin/install)", "")
        $(info "Gnu install is not found, try 'brew install coreutils")
    else
        export PATH:=/usr/local/opt/coreutils/libexec/gnubin:$(PATH)
    endif
endif

musl-cross-$(ELLCC_HOST).tar.xz:
	@echo "Downloading toolchain"
	curl -f -O hauschen.net/musl-cross-$(ELLCC_HOST).tar.xz

/opt/musl-cross: musl-cross-$(ELLCC_HOST).tar.xz
	@echo "Unpacking toolchain"
	@cd /opt && sudo tar xf $(ROOT)/musl-cross-$(ELLCC_HOST).tar.xz

ifneq "$(TARGET)" "native"
    TOOLS_DEPS=$(BUILD)/include/linux
endif

build/tools: $(TOOLS_DEPS) /opt/musl-cross build/tools/$(ELF2BIN)
