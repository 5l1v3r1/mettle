ROOT=$(shell pwd)
TOOLS=build/tools
TOOLS_BIN=$(TOOLS)/bin
BUILD_HOST=linux
TOOLCHAIN_VERSION=6
INSTALL=install

ifneq "$(TARGET)" "native"
    ifneq (,$(findstring musl,$(TARGET)))
        CC=$(ROOT)/$(TOOLS)/musl-cross/bin/$(TARGET)-gcc
        CPP=$(ROOT)/$(TOOLS)/musl-cross/bin/$(TARGET)-cpp
        AR=$(ROOT)/$(TOOLS)/musl-cross/bin/$(TARGET)-ar
        LD=$(ROOT)/$(TOOLS)/musl-cross/bin/$(TARGET)-ld
        RANLIB=$(ROOT)/$(TOOLS)/musl-cross/bin/$(TARGET)-ranlib
    endif
    ifneq (,$(findstring mingw,$(TARGET)))
        CC=$(TARGET)-gcc
        CPP=$(TARGET)-cpp
        AR=$(TARGET)-ar
        LD=$(TARGET)-ld
        RANLIB=$(TARGET)-ranlib
    endif
    ifneq (,$(findstring i386-apple,$(TARGET)))
        ADDFLAGS:=-arch i386
        CFLAGS:=$(CFLAGS) $(ADDFLAGS)
        CPPFLAGS:=$(CPPFLAGS) $(ADDFLAGS)
        OBJCFLAGS:=$(OBJCFLAGS) $(ADDFLAGS)
        LDFLAGS:=$(LDFLAGS) $(ADDFLAGS)
    endif
    ifneq (,$(findstring iphone,$(TARGET)))
        ADDFLAGS:=-isysroot $(SDKROOT)
        ifneq (,$(findstring arm,$(TARGET)))
            ADDFLAGS:=$(ADDFLAGS) -mios-version-min=7.1 -arch armv7
        else
            ADDFLAGS:=$(ADDFLAGS) -mios-version-min=7.1 -arch arm64
        endif
        CFLAGS:=$(CFLAGS) $(ADDFLAGS)
        CPPFLAGS:=$(CPPFLAGS) $(ADDFLAGS)
        LDFLAGS:=$(LDFLAGS) $(ADDFLAGS)
    endif
    ifneq (,$(findstring sunos,$(TARGET)))
        CC=gcc
        AR=gar
        INSTALL=ginstall
    endif
endif

TAR=tar
ELF2BIN=$(TOOLS_BIN)/elf2bin

$(ELF2BIN): util/elf2bin.c
	@mkdir -p $(TOOLS_BIN)
	@cc -g -o $(ELF2BIN) $<

export PATH:=$(ROOT)/build/tools/musl-cross/bin:$(PATH)
INSTALL=install
export PATH:=$(ROOT)/$(TOOLS)/musl-cross/bin:$(ROOT)/$(TOOLS_BIN):$(PATH)
ifeq "$(shell uname -s)" "Darwin"
    BUILD_HOST=osx
    ifeq ("$(wildcard /usr/local/opt/coreutils/libexec/gnubin/install)", "")
        $(info "Gnu install is not found, try 'brew install coreutils")
    else
        export PATH:=/usr/local/opt/coreutils/libexec/gnubin:$(PATH)
    endif
endif

musl-cross-$(BUILD_HOST)-$(TOOLCHAIN_VERSION).tar.xz:
	@echo "Downloading toolchain"
	curl -f -O https://s3.amazonaws.com/muslcross/musl-cross-$(BUILD_HOST)-$(TOOLCHAIN_VERSION).tar.xz

$(TOOLS)/musl-cross/.unpacked: musl-cross-$(BUILD_HOST)-$(TOOLCHAIN_VERSION).tar.xz
	@echo "Unpacking toolchain"
	@rm -fr $(TOOLS)/musl-cross
	@mkdir -p $(TOOLS)/musl-cross
	@cd $(TOOLS) && tar xfm $(ROOT)/musl-cross-$(BUILD_HOST)-$(TOOLCHAIN_VERSION).tar.xz
	@touch $(TOOLS)/musl-cross/.unpacked

TOOLS_DEPS=
ifneq (,$(findstring musl,$(TARGET)))
  TOOLS_DEPS=$(TOOLS)/musl-cross/.unpacked $(ELF2BIN)
endif

$(TOOLS): $(TOOLS_DEPS)
	@mkdir -p $(TOOLS)
