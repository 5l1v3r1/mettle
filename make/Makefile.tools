BUILD_HOST=linux
ifneq "$(TARGET)" "native"
    CC=/opt/musl-cross/bin/$(TARGET)-gcc
    CPP=/opt/musl-cross/bin/$(TARGET)-cpp
    AR=/opt/musl-cross/bin/$(TARGET)-ar
    LD=/opt/musl-cross/bin/$(TARGET)-ld
    RANLIB=/opt/musl-cross/bin/$(TARGET)-ranlib
else
    CC=cc
    AR=ar
    RANLIB=ranlib
endif

TAR=tar
ELF2BIN=elf2bin$(BITS)

build/tools/$(ELF2BIN): util/$(ELF2BIN).c
	cc -o $@ $< -static

INSTALL=install
export PATH:=/opt/musl-cross/bin:$(PATH)
ifeq "$(shell uname -s)" "Darwin"
    BUILD_HOST=osx
    ifeq ("$(wildcard /usr/local/opt/coreutils/libexec/gnubin/install)", "")
        $(info "Gnu install is not found, try 'brew install coreutils")
    else
        export PATH:=/usr/local/opt/coreutils/libexec/gnubin:$(PATH)
    endif
endif

musl-cross-$(BUILD_HOST).tar.xz:
	@echo "Downloading toolchain"
	curl -f -O hauschen.net/musl-cross-$(BUILD_HOST).tar.xz

/opt/musl-cross/lib/libcc1.so: musl-cross-$(BUILD_HOST).tar.xz
	@echo "Unpacking toolchain"
	@cd /opt && sudo tar xf $(ROOT)/musl-cross-$(BUILD_HOST).tar.xz
	@sudo touch /opt/musl-cross/lib/libcc1.so

build/tools: $(TOOLS_DEPS) /opt/musl-cross/lib/libcc1.so build/tools/$(ELF2BIN)
